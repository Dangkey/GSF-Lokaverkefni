3.
SELECT MOVIE_NAME,MOVIE_YEAR,MOVIE_COST
FROM MOVIE
WHERE MOVIE_NAME LIKE '%hope%'
ORDER BY MOVIE_NAME ASC

4.
Select MOVIE_NAME,MOVIE_YEAR,MOVIE_GENRE
FROM MOVIE
WHERE MOVIE_GENRE LIKE "ACTION"

5.
SELECT MOVIE_NUM,MOVIE_NAME,MOVIE_COST
FROM MOVIE
WHERE MOVIE_COST > 40

6.
SELECT MOVIE_NUM,MOVIE_NAME,MOVIE_COST,MOVIE_GENRE
FROM MOVIE
WHERE MOVIE_GENRE LIKE 'ACTION' OR MOVIE_GENRE LIKE 'COMEDY'
AND MOVIE_COST < 50
ORDER BY MOVIE_GENRE ASC

7.
SELECT MOVIE_NUM,CONCAT(MOVIE_NAME,' (',MOVIE_YEAR,') ',MOVIE_GENRE) AS 'Movie Description'
FROM MOVIE

8.
SELECT MOVIE_GENRE, count(*) as 'Number of Movies'
FROM MOVIE
GROUP BY MOVIE_GENRE

9.
Select AVG(MOVIE_COST) AS 'Average Movie Cost'
from Movie

10.
Select MOVIE_GENRE,AVG(MOVIE_COST) AS 'Average Cost'
from Movie
GROUP BY MOVIE_GENRE

11.
SELECT MOVIE_NAME, MOVIE_GENRE,PRICE_DESCRIPTION,PRICE_RENTFEE
FROM MOVIE, PRICE
WHERE MOVIE.PRICE_CODE = PRICE.PRICE_CODE

12.
SELECT MOVIE_GENRE, AVG(PRICE_RENTFEE) AS 'Average Rental Fee'
FROM MOVIE, PRICE
WHERE MOVIE.PRICE_CODE = PRICE.PRICE_CODE
GROUP BY MOVIE_GENRE

13.
SELECT MOVIE_NAME, MOVIE_YEAR,MOVIE_COST/PRICE_RENTFEE
FROM MOVIE, PRICE
WHERE MOVIE.PRICE_CODE = PRICE.PRICE_CODE
GROUP BY MOVIE_NAME

14.
SELECT MOVIE_NAME, MOVIE_YEAR
FROM MOVIE, PRICE
WHERE MOVIE.PRICE_CODE = PRICE.PRICE_CODE
GROUP BY MOVIE_NAME

15.
SELECT MOVIE_NAME, MOVIE_YEAR, MOVIE_COST
FROM MOVIE
WHERE MOVIE_COST > 44.99 AND MOVIE_COST < 49.99

16.
SELECT MOVIE_NAME, MOVIE_YEAR, PRICE_DESCRIPTION, PRICE_RENTFEE, MOVIE_GENRE
FROM MOVIE INNER JOIN PRICE
ON MOVIE.PRICE_CODE = PRICE.PRICE_CODE
WHERE MOVIE_GENRE = 'Family' OR MOVIE_GENRE = 'Comedy' OR MOVIE_GENRE = 'DRAMA'

17.
SELECT MIN(MEM_BALANCE) AS 'Minumum Balance',MAX(MEM_BALANCE) AS 'Maximum Balance', AVG(MEM_BALANCE) AS 'Average Balance'
FROM MEMBERSHIP, RENTAL
WHERE MEMBERSHIP.MEM_NUM = RENTAL.MEM_NUM

18.
SELECT CONCAT(MEM_FNAME," ",MEM_LNAME) AS 'Membership Name',CONCAT(MEM_STREET,", ",MEM_CITY,", ",MEM_STATE," ",MEM_ZIP) as 'Membership Address'
FROM MEMBERSHIP


25.
ALTER TABLE VIDEO
ADD VID_STATUS VARCHAR(4) DEFAULT 'IN' NOT NULL
CHECK(VID_STATUS IN('IN','OUT','LOST'));

27.
ALTER TABLE PRICE
ADD PRICE_RENTDAYS INT(2) DEFAULT 3 NOT NULL;

28.
UPDATE PRICE
SET PRICE_RENTDAYS = 5
WHERE PRICE_CODE IN(1,3);

UPDATE PRICE
SET PRICE_RENTDAYS = 7
WHERE PRICE_CODE = 4;
